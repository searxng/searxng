{"version":3,"file":"ol.min.js","names":["extend","equals","arrayEquals","Disposable","Event","EventTarget","EventType","Event","Observable","ObjectEventType","Property","Event","BaseObject","CollectionEventType","BaseObject","clone","EventType","coordinates","Relationship","isEmpty","intersects","wrapX","equals","scale","wrapX","RADIUS","EXTENT","Projection","METERS_PER_UNIT","Projection","PROJECTIONS","cache","get","add","add","get","fromLonLat","a2","Projection","makeUTMTransforms","makeUTMProjection","disable","getProj","makeProjection","projection","toEPSG4326","getTransformFunc","makeTransforms","equals","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform","toString","fromString","equivalent","transform","rotate","scale","tmpTransform","createTransform","BaseObject","transform","clone","extent","getProjection","scale","Geometry","coordinates","transform","linearRingss","squaredDx","squaredDistance","tmpPoint","coordinates","coordinates","squaredDistance","SimpleGeometry","coordinates","linearRingArea","SimpleGeometry","coordinates","squaredDistance","squaredDx","forEachSegment","SimpleGeometry","coordinates","linearRing","linearRingsArea","Point","LinearRing","linearRings","isEmpty","SimpleGeometry","coordinates","forEachSegment","canvasPool","EventType","getCacheKey","ImageState","EventTarget","ImageState","EventType","get","iconImageCache","iconCache","ImageState","BaseObject","cache","transform","scale","VectorContext","transform","createTransform","equals","loading","ImageState","transform","xhr","all","Geometry","EventType","SimpleGeometry","coordinates","ends","layout","LineString","SimpleGeometry","coordinates","squaredDistance","squaredDx","Point","SimpleGeometry","coordinates","linearRingssArea","linearRingssCenter","MultiPoint","Polygon","createTransform","linearRingssCenter","getProjection","scale","transform","intersects","level","extend","RBush","RBush_","BaseObject","getProjection","self","Event","Source","allStrategy","RBush","Collection","VectorEventType","RenderFeature","EventType","ObjectEventType","CollectionEventType","getIconImage","ImageState","scale","ImageStyle","ImageState","scale","iconImageCache","IconImage","add","RegularShape","scale","Fill","Stroke","CircleStyle","Fill","scale","VectorContext","coordinates","Relationship","CanvasInstruction","fillInstruction","equals","CanvasBuilder","CanvasInstruction","CanvasBuilder","CanvasInstruction","CanvasBuilder","CanvasInstruction","coordinates","CanvasBuilder","coordinates","p1","p2","p3","CanvasInstruction","scale","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","scale","measureAndCacheTextWidth","cache","render","createTransform","ZIndexContext","scale","text","p1","p2","p3","p4","fillInstruction","strokeInstruction","transform","composeTransform","applyTransform","equals","CanvasInstruction","render","i","ii","createTransform","transform","Executor","composeTransform","i","result","context","ImageStyle","scale","ImageState","getIconImage","image","EventType","CanvasImmediateRenderer","Icon","i","geometry","transforms","Event","Observable","ImageState","EventType","canvasPool","LayerRenderer","createTransform","equals","equivalent","transform","toTransformString","RenderEvent","RenderEventType","ZIndexContext","composeTransform","CanvasLayerRenderer","ViewHint","transform","canvasPool","render","RenderEventType","intersectsExtent","transforms","userProjection","getSquaredRenderTolerance","defaultRenderOrder","wrapExtentX","equals","CanvasBuilderGroup","getRenderTolerance","extent","userExtent","ExecutorGroup","colorFromString","context","always","context","Style","Fill","Stroke","Text","Icon","RegularShape","Circle","none","BaseObject","ViewProperty","ViewHint","isEmpty","polygonFromExtent","userProjection","equals","centerNone","rotationNone","coordinatesEqual","BaseObject","LayerProperty","BaseLayer","LayerProperty","EventType","View","layerState","RenderEventType","Property","Layer","toStyleFunction","Style","BaseVectorLayer","CanvasVectorLayerRenderer","EventTarget","EventType","TileState","Tile","TileState","Event","MapEvent","EventType","Target","PointerEventType","EventType","MapBrowserEvent","MapBrowserEventType","newEvent","PriorityQueue","EventType","TileState","BaseObject","MapEventType","Control","EventType","equals","Control","EventType","transform","contains","Control","EventType","Collection","Zoom","Rotate","Attribution","BaseObject","InteractionProperty","Interaction","MapBrowserEventType","Interaction","MapBrowserEventType","PointerInteraction","centroid","centroidFromPointers","PointerInteraction","Disposable","coordinates","Polygon","Event","PointerInteraction","RenderBox","DragBox","Interaction","EventType","Key","Interaction","EventType","Interaction","EventType","PointerInteraction","centroidFromPointers","PointerInteraction","centroidFromPointers","defaults","Collection","Kinetic","DragRotate","DoubleClickZoom","DragPan","PinchRotate","PinchZoom","KeyboardPan","KeyboardZoom","MouseWheelZoom","DragZoom","Event","BaseLayer","Collection","CollectionEventType","ObjectEventType","EventType","Disposable","wrapX","coordinates","callback","iconImageCache","MapRenderer","ObjectEventType","RenderEvent","RenderEventType","BaseVectorLayer","Layer","LayerGroup","BaseObject","createTransform","defaultControls","defaultInteractions","TileQueue","MapProperty","View","CollectionEventType","applyTransform","Collection","MapBrowserEvent","PointerEventType","EventType","ViewHint","RenderEventType","MapEvent","MapEventType","CompositeMapRenderer","MapBrowserEventHandler","MapBrowserEventType","ObjectEventType","isEmpty","equalsExtent","equals","createOrUpdate","Feature","getProjection","equivalentProjection","transform","coordinates","Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","RenderFeature","GeometryCollection","Geometry","FeatureFormat","JSONFeature","getProjection","RenderFeature","Feature","coordinates","geometry","Tile","TileState","self","width","height","xPos","yPos","source","applyMatrix","Tile","TileState","Triangulation","renderReprojected","EventType","state","Disposable","createOrUpdate","CanvasLayerRenderer","TileRange","createTileCoord","cacheSize","LRUCache","applyTransform","TileState","ImageTile","ReprojTile","DataTile","dx","dy","i","frameState","Layer","cacheSize","TileProperty","BaseTileLayer","CanvasTileLayerRenderer","TileRange","createOrUpdateTileRange","scale","createOrUpdateTileCoord","TileGrid","getProjection","tileCoordHash","Source","getTileGridForProjection","scaleSize","Event","TileSource","TileState","TileEventType","UrlTile","ImageTile","getTileGridForProjection","TileState","EventType","ReprojTile","z","x","y","pixelRatio","render","getProjection","TileImage","XYZ"],"sources":["../../../../../client/simple/node_modules/ol/CollectionEventType.js","../../../../../client/simple/node_modules/ol/ObjectEventType.js","../../../../../client/simple/node_modules/ol/events/EventType.js","../../../../../client/simple/node_modules/ol/Disposable.js","../../../../../client/simple/node_modules/ol/array.js","../../../../../client/simple/node_modules/ol/functions.js","../../../../../client/simple/node_modules/ol/obj.js","../../../../../client/simple/node_modules/ol/events/Event.js","../../../../../client/simple/node_modules/ol/events/Target.js","../../../../../client/simple/node_modules/ol/events.js","../../../../../client/simple/node_modules/ol/Observable.js","../../../../../client/simple/node_modules/ol/util.js","../../../../../client/simple/node_modules/ol/Object.js","../../../../../client/simple/node_modules/ol/Collection.js","../../../../../client/simple/node_modules/ol/asserts.js","../../../../../client/simple/node_modules/ol/Feature.js","../../../../../client/simple/node_modules/ol/extent/Relationship.js","../../../../../client/simple/node_modules/ol/extent.js","../../../../../client/simple/node_modules/ol/math.js","../../../../../client/simple/node_modules/ol/sphere.js","../../../../../client/simple/node_modules/ol/console.js","../../../../../client/simple/node_modules/ol/coordinate.js","../../../../../client/simple/node_modules/ol/proj/Units.js","../../../../../client/simple/node_modules/ol/proj/Projection.js","../../../../../client/simple/node_modules/ol/proj/epsg3857.js","../../../../../client/simple/node_modules/ol/proj/epsg4326.js","../../../../../client/simple/node_modules/ol/proj/projections.js","../../../../../client/simple/node_modules/ol/proj/transforms.js","../../../../../client/simple/node_modules/ol/proj/utm.js","../../../../../client/simple/node_modules/ol/proj.js","../../../../../client/simple/node_modules/ol/transform.js","../../../../../client/simple/node_modules/ol/geom/flat/transform.js","../../../../../client/simple/node_modules/ol/geom/Geometry.js","../../../../../client/simple/node_modules/ol/geom/SimpleGeometry.js","../../../../../client/simple/node_modules/ol/geom/flat/area.js","../../../../../client/simple/node_modules/ol/geom/flat/closest.js","../../../../../client/simple/node_modules/ol/geom/flat/deflate.js","../../../../../client/simple/node_modules/ol/geom/flat/inflate.js","../../../../../client/simple/node_modules/ol/geom/flat/simplify.js","../../../../../client/simple/node_modules/ol/geom/LinearRing.js","../../../../../client/simple/node_modules/ol/geom/Point.js","../../../../../client/simple/node_modules/ol/geom/flat/contains.js","../../../../../client/simple/node_modules/ol/geom/flat/interiorpoint.js","../../../../../client/simple/node_modules/ol/geom/flat/segments.js","../../../../../client/simple/node_modules/ol/geom/flat/intersectsextent.js","../../../../../client/simple/node_modules/ol/geom/flat/reverse.js","../../../../../client/simple/node_modules/ol/geom/flat/orient.js","../../../../../client/simple/node_modules/ol/geom/Polygon.js","../../../../../client/simple/node_modules/ol/geom/flat/interpolate.js","../../../../../client/simple/node_modules/ol/geom/flat/length.js","../../../../../client/simple/node_modules/ol/geom/LineString.js","../../../../../client/simple/node_modules/ol/render/EventType.js","../../../../../client/simple/node_modules/ol/has.js","../../../../../client/simple/node_modules/ol/ImageState.js","../../../../../client/simple/node_modules/ol/dom.js","../../../../../client/simple/node_modules/ol/color.js","../../../../../client/simple/node_modules/ol/Image.js","../../../../../client/simple/node_modules/ol/style/IconImageCache.js","../../../../../client/simple/node_modules/ol/style/IconImage.js","../../../../../client/simple/node_modules/ol/colorlike.js","../../../../../client/simple/node_modules/ol/render/VectorContext.js","../../../../../client/simple/node_modules/ol/css.js","../../../../../client/simple/node_modules/ol/render/canvas.js","../../../../../client/simple/node_modules/ol/render/canvas/Immediate.js","../../../../../client/simple/node_modules/ol/renderer/vector.js","../../../../../client/simple/node_modules/ol/featureloader.js","../../../../../client/simple/node_modules/ol/loadingstrategy.js","../../../../../client/simple/node_modules/ol/geom/flat/center.js","../../../../../client/simple/node_modules/ol/geom/GeometryCollection.js","../../../../../client/simple/node_modules/ol/geom/MultiLineString.js","../../../../../client/simple/node_modules/ol/geom/MultiPoint.js","../../../../../client/simple/node_modules/ol/geom/MultiPolygon.js","../../../../../client/simple/node_modules/ol/render/Feature.js","../../../../../client/simple/node_modules/quickselect/index.js","../../../../../client/simple/node_modules/rbush/index.js","../../../../../client/simple/node_modules/ol/structs/RBush.js","../../../../../client/simple/node_modules/ol/source/Source.js","../../../../../client/simple/node_modules/ol/source/VectorEventType.js","../../../../../client/simple/node_modules/ol/source/Vector.js","../../../../../client/simple/node_modules/ol/style/Fill.js","../../../../../client/simple/node_modules/ol/style/Stroke.js","../../../../../client/simple/node_modules/ol/size.js","../../../../../client/simple/node_modules/ol/style/Image.js","../../../../../client/simple/node_modules/ol/style/RegularShape.js","../../../../../client/simple/node_modules/ol/style/Circle.js","../../../../../client/simple/node_modules/ol/style/Style.js","../../../../../client/simple/node_modules/ol/style/Text.js","../../../../../client/simple/node_modules/ol/ViewHint.js","../../../../../client/simple/node_modules/ol/render/canvas/Instruction.js","../../../../../client/simple/node_modules/ol/render/canvas/Builder.js","../../../../../client/simple/node_modules/ol/render/canvas/ImageBuilder.js","../../../../../client/simple/node_modules/ol/render/canvas/LineStringBuilder.js","../../../../../client/simple/node_modules/ol/render/canvas/PolygonBuilder.js","../../../../../client/simple/node_modules/ol/geom/flat/linechunk.js","../../../../../client/simple/node_modules/ol/geom/flat/straightchunk.js","../../../../../client/simple/node_modules/ol/render/canvas/TextBuilder.js","../../../../../client/simple/node_modules/ol/render/canvas/BuilderGroup.js","../../../../../client/simple/node_modules/ol/geom/flat/textpath.js","../../../../../client/simple/node_modules/ol/render/canvas/ZIndexContext.js","../../../../../client/simple/node_modules/ol/render/canvas/Executor.js","../../../../../client/simple/node_modules/ol/render/canvas/ExecutorGroup.js","../../../../../client/simple/node_modules/ol/style/Icon.js","../../../../../client/simple/node_modules/ol/render/canvas/hitdetect.js","../../../../../client/simple/node_modules/ol/render/Event.js","../../../../../client/simple/node_modules/ol/renderer/Layer.js","../../../../../client/simple/node_modules/ol/renderer/canvas/Layer.js","../../../../../client/simple/node_modules/ol/renderer/canvas/VectorLayer.js","../../../../../client/simple/node_modules/ol/expr/expression.js","../../../../../client/simple/node_modules/ol/expr/cpu.js","../../../../../client/simple/node_modules/ol/render/canvas/style.js","../../../../../client/simple/node_modules/ol/ViewProperty.js","../../../../../client/simple/node_modules/ol/centerconstraint.js","../../../../../client/simple/node_modules/ol/easing.js","../../../../../client/simple/node_modules/ol/resolutionconstraint.js","../../../../../client/simple/node_modules/ol/rotationconstraint.js","../../../../../client/simple/node_modules/ol/tilegrid/common.js","../../../../../client/simple/node_modules/ol/View.js","../../../../../client/simple/node_modules/ol/layer/Property.js","../../../../../client/simple/node_modules/ol/layer/Base.js","../../../../../client/simple/node_modules/ol/layer/Layer.js","../../../../../client/simple/node_modules/ol/layer/BaseVector.js","../../../../../client/simple/node_modules/ol/layer/Vector.js","../../../../../client/simple/node_modules/ol/TileState.js","../../../../../client/simple/node_modules/ol/Tile.js","../../../../../client/simple/node_modules/ol/ImageTile.js","../../../../../client/simple/node_modules/ol/Kinetic.js","../../../../../client/simple/node_modules/ol/MapEvent.js","../../../../../client/simple/node_modules/ol/MapBrowserEvent.js","../../../../../client/simple/node_modules/ol/MapBrowserEventType.js","../../../../../client/simple/node_modules/ol/pointer/EventType.js","../../../../../client/simple/node_modules/ol/MapBrowserEventHandler.js","../../../../../client/simple/node_modules/ol/MapEventType.js","../../../../../client/simple/node_modules/ol/MapProperty.js","../../../../../client/simple/node_modules/ol/structs/PriorityQueue.js","../../../../../client/simple/node_modules/ol/TileQueue.js","../../../../../client/simple/node_modules/ol/control/Control.js","../../../../../client/simple/node_modules/ol/control/Attribution.js","../../../../../client/simple/node_modules/ol/control/Rotate.js","../../../../../client/simple/node_modules/ol/control/Zoom.js","../../../../../client/simple/node_modules/ol/control/defaults.js","../../../../../client/simple/node_modules/ol/interaction/Property.js","../../../../../client/simple/node_modules/ol/interaction/Interaction.js","../../../../../client/simple/node_modules/ol/interaction/DoubleClickZoom.js","../../../../../client/simple/node_modules/ol/events/condition.js","../../../../../client/simple/node_modules/ol/interaction/Pointer.js","../../../../../client/simple/node_modules/ol/interaction/DragPan.js","../../../../../client/simple/node_modules/ol/interaction/DragRotate.js","../../../../../client/simple/node_modules/ol/render/Box.js","../../../../../client/simple/node_modules/ol/interaction/DragBox.js","../../../../../client/simple/node_modules/ol/interaction/DragZoom.js","../../../../../client/simple/node_modules/ol/events/Key.js","../../../../../client/simple/node_modules/ol/interaction/KeyboardPan.js","../../../../../client/simple/node_modules/ol/interaction/KeyboardZoom.js","../../../../../client/simple/node_modules/ol/interaction/MouseWheelZoom.js","../../../../../client/simple/node_modules/ol/interaction/PinchRotate.js","../../../../../client/simple/node_modules/ol/interaction/PinchZoom.js","../../../../../client/simple/node_modules/ol/interaction/defaults.js","../../../../../client/simple/node_modules/ol/layer/Group.js","../../../../../client/simple/node_modules/ol/renderer/Map.js","../../../../../client/simple/node_modules/ol/renderer/Composite.js","../../../../../client/simple/node_modules/ol/Map.js","../../../../../client/simple/node_modules/ol/TileRange.js","../../../../../client/simple/node_modules/ol/format/Feature.js","../../../../../client/simple/node_modules/ol/format/JSONFeature.js","../../../../../client/simple/node_modules/ol/format/GeoJSON.js","../../../../../client/simple/node_modules/ol/DataTile.js","../../../../../client/simple/node_modules/ol/reproj.js","../../../../../client/simple/node_modules/ol/reproj/Triangulation.js","../../../../../client/simple/node_modules/ol/reproj/common.js","../../../../../client/simple/node_modules/ol/reproj/Tile.js","../../../../../client/simple/node_modules/ol/structs/LRUCache.js","../../../../../client/simple/node_modules/ol/tilecoord.js","../../../../../client/simple/node_modules/ol/renderer/canvas/TileLayer.js","../../../../../client/simple/node_modules/ol/layer/TileProperty.js","../../../../../client/simple/node_modules/ol/layer/BaseTile.js","../../../../../client/simple/node_modules/ol/layer/Tile.js","../../../../../client/simple/node_modules/ol/tilegrid/TileGrid.js","../../../../../client/simple/node_modules/ol/tilegrid.js","../../../../../client/simple/node_modules/ol/uri.js","../../../../../client/simple/node_modules/ol/tileurlfunction.js","../../../../../client/simple/node_modules/ol/source/Tile.js","../../../../../client/simple/node_modules/ol/source/TileEventType.js","../../../../../client/simple/node_modules/ol/source/UrlTile.js","../../../../../client/simple/node_modules/ol/source/TileImage.js","../../../../../client/simple/node_modules/ol/source/XYZ.js","../../../../../client/simple/node_modules/ol/source/OSM.js"],"sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType|null} Closest feature (or `null` if none found).\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      this.instructions.push(createFill.call(this, state));\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      applyStroke.call(this, state);\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    this.updateFillStyle(state, this.createFill);\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    if (!instruction[1]) {\n      return;\n    }\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      // Refrain from adding a 'willReadFrequently' hint in the options here.\n      // While it will remove the \"Canvas2D: Multiple readback operations using\n      // getImageData are faster with the willReadFrequently attribute set\n      // to true\" warnings in the console, it makes hitDetection extremely\n      // slow in Chrome when there are many features on the map\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + ALL.indexOf(builderType);\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1 && this.targetContext_) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"mappings":"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"}